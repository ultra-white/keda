generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          Role      @default(USER)
  cart          Cart?
  orders        Order[]
}

model Product {
  id          String      @id @default(cuid())
  brandId     String?
  brandName   String
  model       String
  price       Float
  description String
  categoryId  String
  image       String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isNew       Boolean     @default(false)
  isOnSale    Boolean     @default(false)
  oldPrice    Float?
  cartItems   CartItem[]
  orderItems  OrderItem[]
  brand       Brand?      @relation(fields: [brandId], references: [id])
  category    Category    @relation(fields: [categoryId], references: [id])
}

model Category {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Cart {
  id        String     @id @default(cuid())
  userId    String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int
  productId String
  cartId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  size      Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@index([productId])
  @@index([cartId])
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  total     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  status    OrderStatus @default(PROCESSING)
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]

  @@index([userId])
}

model OrderItem {
  id        String   @id @default(cuid())
  quantity  Int
  price     Float
  productId String
  orderId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  size      Int
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@index([productId])
  @@index([orderId])
}

model Brand {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PROCESSING
  ACCEPTED
  SHIPPED
  DELIVERED
  CANCELLED
}
